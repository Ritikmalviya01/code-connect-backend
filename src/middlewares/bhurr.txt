// get user by email
app.get("/user" , async (req , res)=>{
    const userEmail = req.body.emailId;
    try{
       const users =  await User.find({emailId: userEmail });
       if(users.length === 0){
        res.status(400).send("Something went wrong")
    }
        res.send(users)
        } catch(err){
          res.status(400).send("Something went wrong")
        }

})
// get all the users from the data base 
app.get("/feed" , async (req, res) => {
    try{
        const users =  await User.find({});
         res.send(users)
         } catch(err){
           res.status(400).send("Something went wrong")
         }
})
//delete the user 
app.delete("/user" , async (req, res) => {
    try{
        const users =  await User.findByIdAndDelete({_id: userId});
         res.send("user deleted succesfully")
         } catch(err){
           res.status(400).send("Something went wrong")
         }
})

// update the data user deatails
app.patch("/user", async (req, res) => {
    const userId = req.body.userId;
    const data = req.body;
    

    try{
        const ALLOWED_UPDATES = [
            "userId", "photoUrl", "about", "gender", "age", "skills"
        ]
          
        const isAlowedUpdate = Object.keys(data).every((k) => 
            ALLOWED_UPDATES.includes(k)
        );
        if (!isAlowedUpdate) {
            res.status(400).send("Update not allowed")
        }
       const user = await User.findByIdAndUpdate({_id: userId}, data ,{
            returnDocument: "after",
            runValidators: true,
        });
        console.log(user)
        
        res.send("User Updated Succesfully")

    } catch(err){
        res.status(400).send("update fail:" + err.message)
      }
})




